$date
	Thu Dec 30 02:25:33 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module router_tb $end
$var wire 16 ! west_out [15:0] $end
$var wire 5 " valid [4:0] $end
$var wire 16 # south_out [15:0] $end
$var wire 5 $ readyBuffer [4:0] $end
$var wire 16 % north_out [15:0] $end
$var wire 16 & ni_out [15:0] $end
$var wire 16 ' east_out [15:0] $end
$var reg 1 ( clk $end
$var reg 16 ) east_in [15:0] $end
$var reg 16 * ni_in [15:0] $end
$var reg 16 + north_in [15:0] $end
$var reg 5 , outputReady [4:0] $end
$var reg 1 - reset $end
$var reg 16 . south_in [15:0] $end
$var reg 5 / validData [4:0] $end
$var reg 16 0 west_in [15:0] $end
$scope module test $end
$var wire 1 ( clk $end
$var wire 16 1 east_in [15:0] $end
$var wire 16 2 ni_in [15:0] $end
$var wire 16 3 north_in [15:0] $end
$var wire 5 4 outputReady [4:0] $end
$var wire 1 - reset $end
$var wire 16 5 south_in [15:0] $end
$var wire 5 6 validData [4:0] $end
$var wire 16 7 west_in [15:0] $end
$var wire 16 8 west_out [15:0] $end
$var wire 5 9 valid [4:0] $end
$var wire 16 : south_out [15:0] $end
$var wire 5 ; readyBuffer [4:0] $end
$var wire 5 < outputAvailable [4:0] $end
$var wire 16 = north_out [15:0] $end
$var wire 16 > ni_out [15:0] $end
$var wire 16 ? east_out [15:0] $end
$scope module arbiterEast $end
$var wire 1 @ anyGrant $end
$var wire 1 ( clk $end
$var wire 5 A grant [4:0] $end
$var wire 5 B request [4:0] $end
$var wire 1 - reset $end
$var wire 1 C stage3_sel $end
$var wire 5 D stage3_grant [4:0] $end
$var wire 17 E stage3_data [16:0] $end
$var wire 2 F stage3 [1:0] $end
$var wire 1 G stage2_sel $end
$var wire 5 H stage2_grant [4:0] $end
$var wire 2 I stage1_sel [1:0] $end
$var wire 5 J stage1_grant [4:0] $end
$var wire 17 K data_out [16:0] $end
$var wire 17 L data_4 [16:0] $end
$var wire 17 M data_3 [16:0] $end
$var wire 17 N data_2 [16:0] $end
$var wire 17 O data_1 [16:0] $end
$var wire 17 P data_0 [16:0] $end
$var reg 1 Q outputAvailable $end
$var reg 5 R prior [4:0] $end
$scope module stage_1_0 $end
$var wire 2 S in1 [1:0] $end
$var wire 2 T in2 [1:0] $end
$var wire 1 U sel $end
$var wire 2 V out [1:0] $end
$upscope $end
$scope module stage_1_1 $end
$var wire 2 W in1 [1:0] $end
$var wire 2 X in2 [1:0] $end
$var wire 1 Y sel $end
$var wire 2 Z out [1:0] $end
$upscope $end
$scope module stage_2 $end
$var wire 2 [ in1 [1:0] $end
$var wire 2 \ in2 [1:0] $end
$var wire 1 G sel $end
$var wire 2 ] out [1:0] $end
$upscope $end
$scope module stage_3 $end
$var wire 2 ^ in1 [1:0] $end
$var wire 2 _ in2 [1:0] $end
$var wire 1 C sel $end
$var wire 2 ` out [1:0] $end
$upscope $end
$upscope $end
$scope module arbiterNi $end
$var wire 1 a anyGrant $end
$var wire 1 ( clk $end
$var wire 5 b grant [4:0] $end
$var wire 5 c request [4:0] $end
$var wire 1 - reset $end
$var wire 1 d stage3_sel $end
$var wire 5 e stage3_grant [4:0] $end
$var wire 17 f stage3_data [16:0] $end
$var wire 2 g stage3 [1:0] $end
$var wire 1 h stage2_sel $end
$var wire 5 i stage2_grant [4:0] $end
$var wire 2 j stage1_sel [1:0] $end
$var wire 5 k stage1_grant [4:0] $end
$var wire 17 l data_out [16:0] $end
$var wire 17 m data_4 [16:0] $end
$var wire 17 n data_3 [16:0] $end
$var wire 17 o data_2 [16:0] $end
$var wire 17 p data_1 [16:0] $end
$var wire 17 q data_0 [16:0] $end
$var reg 1 r outputAvailable $end
$var reg 5 s prior [4:0] $end
$scope module stage_1_0 $end
$var wire 2 t in1 [1:0] $end
$var wire 2 u in2 [1:0] $end
$var wire 1 v sel $end
$var wire 2 w out [1:0] $end
$upscope $end
$scope module stage_1_1 $end
$var wire 2 x in1 [1:0] $end
$var wire 2 y in2 [1:0] $end
$var wire 1 z sel $end
$var wire 2 { out [1:0] $end
$upscope $end
$scope module stage_2 $end
$var wire 2 | in1 [1:0] $end
$var wire 2 } in2 [1:0] $end
$var wire 1 h sel $end
$var wire 2 ~ out [1:0] $end
$upscope $end
$scope module stage_3 $end
$var wire 2 !" in1 [1:0] $end
$var wire 2 "" in2 [1:0] $end
$var wire 1 d sel $end
$var wire 2 #" out [1:0] $end
$upscope $end
$upscope $end
$scope module arbiterNorth $end
$var wire 1 $" anyGrant $end
$var wire 1 ( clk $end
$var wire 5 %" grant [4:0] $end
$var wire 5 &" request [4:0] $end
$var wire 1 - reset $end
$var wire 1 '" stage3_sel $end
$var wire 5 (" stage3_grant [4:0] $end
$var wire 17 )" stage3_data [16:0] $end
$var wire 2 *" stage3 [1:0] $end
$var wire 1 +" stage2_sel $end
$var wire 5 ," stage2_grant [4:0] $end
$var wire 2 -" stage1_sel [1:0] $end
$var wire 5 ." stage1_grant [4:0] $end
$var wire 17 /" data_out [16:0] $end
$var wire 17 0" data_4 [16:0] $end
$var wire 17 1" data_3 [16:0] $end
$var wire 17 2" data_2 [16:0] $end
$var wire 17 3" data_1 [16:0] $end
$var wire 17 4" data_0 [16:0] $end
$var reg 1 5" outputAvailable $end
$var reg 5 6" prior [4:0] $end
$scope module stage_1_0 $end
$var wire 2 7" in1 [1:0] $end
$var wire 2 8" in2 [1:0] $end
$var wire 1 9" sel $end
$var wire 2 :" out [1:0] $end
$upscope $end
$scope module stage_1_1 $end
$var wire 2 ;" in1 [1:0] $end
$var wire 2 <" in2 [1:0] $end
$var wire 1 =" sel $end
$var wire 2 >" out [1:0] $end
$upscope $end
$scope module stage_2 $end
$var wire 2 ?" in1 [1:0] $end
$var wire 2 @" in2 [1:0] $end
$var wire 1 +" sel $end
$var wire 2 A" out [1:0] $end
$upscope $end
$scope module stage_3 $end
$var wire 2 B" in1 [1:0] $end
$var wire 2 C" in2 [1:0] $end
$var wire 1 '" sel $end
$var wire 2 D" out [1:0] $end
$upscope $end
$upscope $end
$scope module arbiterSouth $end
$var wire 1 E" anyGrant $end
$var wire 1 ( clk $end
$var wire 5 F" grant [4:0] $end
$var wire 5 G" request [4:0] $end
$var wire 1 - reset $end
$var wire 1 H" stage3_sel $end
$var wire 5 I" stage3_grant [4:0] $end
$var wire 17 J" stage3_data [16:0] $end
$var wire 2 K" stage3 [1:0] $end
$var wire 1 L" stage2_sel $end
$var wire 5 M" stage2_grant [4:0] $end
$var wire 2 N" stage1_sel [1:0] $end
$var wire 5 O" stage1_grant [4:0] $end
$var wire 17 P" data_out [16:0] $end
$var wire 17 Q" data_4 [16:0] $end
$var wire 17 R" data_3 [16:0] $end
$var wire 17 S" data_2 [16:0] $end
$var wire 17 T" data_1 [16:0] $end
$var wire 17 U" data_0 [16:0] $end
$var reg 1 V" outputAvailable $end
$var reg 5 W" prior [4:0] $end
$scope module stage_1_0 $end
$var wire 2 X" in1 [1:0] $end
$var wire 2 Y" in2 [1:0] $end
$var wire 1 Z" sel $end
$var wire 2 [" out [1:0] $end
$upscope $end
$scope module stage_1_1 $end
$var wire 2 \" in1 [1:0] $end
$var wire 2 ]" in2 [1:0] $end
$var wire 1 ^" sel $end
$var wire 2 _" out [1:0] $end
$upscope $end
$scope module stage_2 $end
$var wire 2 `" in1 [1:0] $end
$var wire 2 a" in2 [1:0] $end
$var wire 1 L" sel $end
$var wire 2 b" out [1:0] $end
$upscope $end
$scope module stage_3 $end
$var wire 2 c" in1 [1:0] $end
$var wire 2 d" in2 [1:0] $end
$var wire 1 H" sel $end
$var wire 2 e" out [1:0] $end
$upscope $end
$upscope $end
$scope module arbiterWest $end
$var wire 1 f" anyGrant $end
$var wire 1 ( clk $end
$var wire 5 g" grant [4:0] $end
$var wire 5 h" request [4:0] $end
$var wire 1 - reset $end
$var wire 1 i" stage3_sel $end
$var wire 5 j" stage3_grant [4:0] $end
$var wire 17 k" stage3_data [16:0] $end
$var wire 2 l" stage3 [1:0] $end
$var wire 1 m" stage2_sel $end
$var wire 5 n" stage2_grant [4:0] $end
$var wire 2 o" stage1_sel [1:0] $end
$var wire 5 p" stage1_grant [4:0] $end
$var wire 17 q" data_out [16:0] $end
$var wire 17 r" data_4 [16:0] $end
$var wire 17 s" data_3 [16:0] $end
$var wire 17 t" data_2 [16:0] $end
$var wire 17 u" data_1 [16:0] $end
$var wire 17 v" data_0 [16:0] $end
$var reg 1 w" outputAvailable $end
$var reg 5 x" prior [4:0] $end
$scope module stage_1_0 $end
$var wire 2 y" in1 [1:0] $end
$var wire 2 z" in2 [1:0] $end
$var wire 1 {" sel $end
$var wire 2 |" out [1:0] $end
$upscope $end
$scope module stage_1_1 $end
$var wire 2 }" in1 [1:0] $end
$var wire 2 ~" in2 [1:0] $end
$var wire 1 !# sel $end
$var wire 2 "# out [1:0] $end
$upscope $end
$scope module stage_2 $end
$var wire 2 ## in1 [1:0] $end
$var wire 2 $# in2 [1:0] $end
$var wire 1 m" sel $end
$var wire 2 %# out [1:0] $end
$upscope $end
$scope module stage_3 $end
$var wire 2 &# in1 [1:0] $end
$var wire 2 '# in2 [1:0] $end
$var wire 1 i" sel $end
$var wire 2 (# out [1:0] $end
$upscope $end
$upscope $end
$scope module eastGate $end
$var wire 1 ( clk $end
$var wire 16 )# dataIn [15:0] $end
$var wire 1 *# isHead $end
$var wire 5 +# outputAvailable [4:0] $end
$var wire 5 ,# outputGrant [4:0] $end
$var wire 5 -# outputReady [4:0] $end
$var wire 1 .# ready $end
$var wire 1 /# request $end
$var wire 1 - reset $end
$var wire 1 0# validIn $end
$var wire 5 1# validOut [4:0] $end
$var wire 3 2# selectPort [2:0] $end
$var wire 5 3# requestPort [4:0] $end
$var wire 1 4# readyPort $end
$var wire 1 5# portAvailable $end
$var wire 5 6# destination [4:0] $end
$var wire 17 7# dataOut4 [16:0] $end
$var wire 17 8# dataOut3 [16:0] $end
$var wire 17 9# dataOut2 [16:0] $end
$var wire 17 :# dataOut1 [16:0] $end
$var wire 17 ;# dataOut0 [16:0] $end
$var reg 1 <# outLock $end
$var reg 5 =# outPort [4:0] $end
$scope module Available $end
$var wire 5 ># in [4:0] $end
$var wire 1 5# out $end
$var wire 3 ?# sel [2:0] $end
$var wire 1 @# stage_3 $end
$var wire 1 A# stage_2 $end
$var wire 2 B# stage_1 [1:0] $end
$upscope $end
$scope module outReady $end
$var wire 5 C# in [4:0] $end
$var wire 1 4# out $end
$var wire 3 D# sel [2:0] $end
$var wire 1 E# stage_3 $end
$var wire 1 F# stage_2 $end
$var wire 2 G# stage_1 [1:0] $end
$upscope $end
$scope module outRequest $end
$var wire 1 /# in $end
$var wire 3 H# sel [2:0] $end
$var wire 5 I# out [4:0] $end
$upscope $end
$upscope $end
$scope module niGate $end
$var wire 1 ( clk $end
$var wire 16 J# dataIn [15:0] $end
$var wire 1 K# isHead $end
$var wire 5 L# outputAvailable [4:0] $end
$var wire 5 M# outputGrant [4:0] $end
$var wire 5 N# outputReady [4:0] $end
$var wire 1 O# ready $end
$var wire 1 P# request $end
$var wire 1 - reset $end
$var wire 1 Q# validIn $end
$var wire 5 R# validOut [4:0] $end
$var wire 3 S# selectPort [2:0] $end
$var wire 5 T# requestPort [4:0] $end
$var wire 1 U# readyPort $end
$var wire 1 V# portAvailable $end
$var wire 5 W# destination [4:0] $end
$var wire 17 X# dataOut4 [16:0] $end
$var wire 17 Y# dataOut3 [16:0] $end
$var wire 17 Z# dataOut2 [16:0] $end
$var wire 17 [# dataOut1 [16:0] $end
$var wire 17 \# dataOut0 [16:0] $end
$var reg 1 ]# outLock $end
$var reg 5 ^# outPort [4:0] $end
$scope module Available $end
$var wire 5 _# in [4:0] $end
$var wire 1 V# out $end
$var wire 3 `# sel [2:0] $end
$var wire 1 a# stage_3 $end
$var wire 1 b# stage_2 $end
$var wire 2 c# stage_1 [1:0] $end
$upscope $end
$scope module outReady $end
$var wire 5 d# in [4:0] $end
$var wire 1 U# out $end
$var wire 3 e# sel [2:0] $end
$var wire 1 f# stage_3 $end
$var wire 1 g# stage_2 $end
$var wire 2 h# stage_1 [1:0] $end
$upscope $end
$scope module outRequest $end
$var wire 1 P# in $end
$var wire 3 i# sel [2:0] $end
$var wire 5 j# out [4:0] $end
$upscope $end
$upscope $end
$scope module northGate $end
$var wire 1 ( clk $end
$var wire 16 k# dataIn [15:0] $end
$var wire 1 l# isHead $end
$var wire 5 m# outputAvailable [4:0] $end
$var wire 5 n# outputGrant [4:0] $end
$var wire 5 o# outputReady [4:0] $end
$var wire 1 p# ready $end
$var wire 1 q# request $end
$var wire 1 - reset $end
$var wire 1 r# validIn $end
$var wire 5 s# validOut [4:0] $end
$var wire 3 t# selectPort [2:0] $end
$var wire 5 u# requestPort [4:0] $end
$var wire 1 v# readyPort $end
$var wire 1 w# portAvailable $end
$var wire 5 x# destination [4:0] $end
$var wire 17 y# dataOut4 [16:0] $end
$var wire 17 z# dataOut3 [16:0] $end
$var wire 17 {# dataOut2 [16:0] $end
$var wire 17 |# dataOut1 [16:0] $end
$var wire 17 }# dataOut0 [16:0] $end
$var reg 1 ~# outLock $end
$var reg 5 !$ outPort [4:0] $end
$scope module Available $end
$var wire 5 "$ in [4:0] $end
$var wire 1 w# out $end
$var wire 3 #$ sel [2:0] $end
$var wire 1 $$ stage_3 $end
$var wire 1 %$ stage_2 $end
$var wire 2 &$ stage_1 [1:0] $end
$upscope $end
$scope module outReady $end
$var wire 5 '$ in [4:0] $end
$var wire 1 v# out $end
$var wire 3 ($ sel [2:0] $end
$var wire 1 )$ stage_3 $end
$var wire 1 *$ stage_2 $end
$var wire 2 +$ stage_1 [1:0] $end
$upscope $end
$scope module outRequest $end
$var wire 1 q# in $end
$var wire 3 ,$ sel [2:0] $end
$var wire 5 -$ out [4:0] $end
$upscope $end
$upscope $end
$scope module southGate $end
$var wire 1 ( clk $end
$var wire 16 .$ dataIn [15:0] $end
$var wire 1 /$ isHead $end
$var wire 5 0$ outputAvailable [4:0] $end
$var wire 5 1$ outputGrant [4:0] $end
$var wire 5 2$ outputReady [4:0] $end
$var wire 1 3$ ready $end
$var wire 1 4$ request $end
$var wire 1 - reset $end
$var wire 1 5$ validIn $end
$var wire 5 6$ validOut [4:0] $end
$var wire 3 7$ selectPort [2:0] $end
$var wire 5 8$ requestPort [4:0] $end
$var wire 1 9$ readyPort $end
$var wire 1 :$ portAvailable $end
$var wire 5 ;$ destination [4:0] $end
$var wire 17 <$ dataOut4 [16:0] $end
$var wire 17 =$ dataOut3 [16:0] $end
$var wire 17 >$ dataOut2 [16:0] $end
$var wire 17 ?$ dataOut1 [16:0] $end
$var wire 17 @$ dataOut0 [16:0] $end
$var reg 1 A$ outLock $end
$var reg 5 B$ outPort [4:0] $end
$scope module Available $end
$var wire 5 C$ in [4:0] $end
$var wire 1 :$ out $end
$var wire 3 D$ sel [2:0] $end
$var wire 1 E$ stage_3 $end
$var wire 1 F$ stage_2 $end
$var wire 2 G$ stage_1 [1:0] $end
$upscope $end
$scope module outReady $end
$var wire 5 H$ in [4:0] $end
$var wire 1 9$ out $end
$var wire 3 I$ sel [2:0] $end
$var wire 1 J$ stage_3 $end
$var wire 1 K$ stage_2 $end
$var wire 2 L$ stage_1 [1:0] $end
$upscope $end
$scope module outRequest $end
$var wire 1 4$ in $end
$var wire 3 M$ sel [2:0] $end
$var wire 5 N$ out [4:0] $end
$upscope $end
$upscope $end
$scope module westGate $end
$var wire 1 ( clk $end
$var wire 16 O$ dataIn [15:0] $end
$var wire 1 P$ isHead $end
$var wire 5 Q$ outputAvailable [4:0] $end
$var wire 5 R$ outputGrant [4:0] $end
$var wire 5 S$ outputReady [4:0] $end
$var wire 1 T$ ready $end
$var wire 1 U$ request $end
$var wire 1 - reset $end
$var wire 1 V$ validIn $end
$var wire 5 W$ validOut [4:0] $end
$var wire 3 X$ selectPort [2:0] $end
$var wire 5 Y$ requestPort [4:0] $end
$var wire 1 Z$ readyPort $end
$var wire 1 [$ portAvailable $end
$var wire 5 \$ destination [4:0] $end
$var wire 17 ]$ dataOut4 [16:0] $end
$var wire 17 ^$ dataOut3 [16:0] $end
$var wire 17 _$ dataOut2 [16:0] $end
$var wire 17 `$ dataOut1 [16:0] $end
$var wire 17 a$ dataOut0 [16:0] $end
$var reg 1 b$ outLock $end
$var reg 5 c$ outPort [4:0] $end
$scope module Available $end
$var wire 5 d$ in [4:0] $end
$var wire 1 [$ out $end
$var wire 3 e$ sel [2:0] $end
$var wire 1 f$ stage_3 $end
$var wire 1 g$ stage_2 $end
$var wire 2 h$ stage_1 [1:0] $end
$upscope $end
$scope module outReady $end
$var wire 5 i$ in [4:0] $end
$var wire 1 Z$ out $end
$var wire 3 j$ sel [2:0] $end
$var wire 1 k$ stage_3 $end
$var wire 1 l$ stage_2 $end
$var wire 2 m$ stage_1 [1:0] $end
$upscope $end
$scope module outRequest $end
$var wire 1 U$ in $end
$var wire 3 n$ sel [2:0] $end
$var wire 5 o$ out [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10 o$
b1 n$
b11 m$
1l$
1k$
b1 j$
b11111 i$
b11 h$
1g$
1f$
b1 e$
b11111 d$
b0 c$
0b$
b11100100000000010 a$
b11100100000000010 `$
b11100100000000010 _$
b11100100000000010 ^$
b11100100000000010 ]$
b1 \$
1[$
1Z$
b10 Y$
b1 X$
bz W$
1V$
1U$
0T$
b11111 S$
b0 R$
b11111 Q$
1P$
b1100100000000010 O$
b10 N$
b1 M$
b11 L$
1K$
1J$
b1 I$
b11111 H$
b11 G$
1F$
1E$
b1 D$
b11111 C$
b0 B$
0A$
b11100100000000100 @$
b11100100000000100 ?$
b11100100000000100 >$
b11100100000000100 =$
b11100100000000100 <$
b1 ;$
1:$
19$
b10 8$
b1 7$
bz 6$
15$
14$
03$
b11111 2$
b0 1$
b11111 0$
1/$
b1100100000000100 .$
b10 -$
b1 ,$
b11 +$
1*$
1)$
b1 ($
b11111 '$
b11 &$
1%$
1$$
b1 #$
b11111 "$
b0 !$
0~#
b11100100000000001 }#
b11100100000000001 |#
b11100100000000001 {#
b11100100000000001 z#
b11100100000000001 y#
b1 x#
1w#
1v#
b10 u#
b1 t#
bz s#
1r#
1q#
1p#
b11111 o#
b10 n#
b11111 m#
1l#
b1100100000000001 k#
b10 j#
b1 i#
b11 h#
1g#
1f#
b1 e#
b11111 d#
b11 c#
1b#
1a#
b1 `#
b11111 _#
b0 ^#
0]#
b11100100000000101 \#
b11100100000000101 [#
b11100100000000101 Z#
b11100100000000101 Y#
b11100100000000101 X#
b1 W#
1V#
1U#
b10 T#
b1 S#
bz R#
1Q#
1P#
0O#
b11111 N#
b0 M#
b11111 L#
1K#
b1100100000000101 J#
b10 I#
b1 H#
b11 G#
1F#
1E#
b1 D#
b11111 C#
b11 B#
1A#
1@#
b1 ?#
b11111 >#
b0 =#
0<#
b11100100000000011 ;#
b11100100000000011 :#
b11100100000000011 9#
b11100100000000011 8#
b11100100000000011 7#
b1 6#
15#
14#
b10 3#
b1 2#
bz 1#
10#
1/#
0.#
b11111 -#
b0 ,#
b11111 +#
1*#
b1100100000000011 )#
b11 (#
b11 '#
b11 &#
b11 %#
b11 $#
b11 ##
b11 "#
0!#
b11 ~"
b11 }"
b11 |"
0{"
b11 z"
b11 y"
b11111 x"
1w"
b11100100000000001 v"
b11100100000000010 u"
b11100100000000011 t"
b11100100000000100 s"
b11100100000000101 r"
b11100100000000001 q"
b10101 p"
b0 o"
b10001 n"
0m"
b11 l"
b11100100000000001 k"
b1 j"
0i"
b11111 h"
b1 g"
1f"
b1 e"
b1 d"
b1 c"
b1 b"
b1 a"
b1 `"
b1 _"
0^"
b1 ]"
b1 \"
b1 ["
0Z"
b1 Y"
b1 X"
b11111 W"
1V"
b11100100000000001 U"
b11100100000000010 T"
b11100100000000011 S"
b11100100000000100 R"
b11100100000000101 Q"
b1100100000000001 P"
b0 O"
b0 N"
b0 M"
0L"
b1 K"
b11100100000000001 J"
b0 I"
0H"
b0 G"
b0 F"
0E"
b1 D"
b1 C"
b1 B"
b1 A"
b1 @"
b1 ?"
b1 >"
0="
b1 <"
b1 ;"
b1 :"
09"
b1 8"
b1 7"
b11111 6"
15"
b11100100000000001 4"
b11100100000000010 3"
b11100100000000011 2"
b11100100000000100 1"
b11100100000000101 0"
b1100100000000001 /"
b0 ."
b0 -"
b0 ,"
0+"
b1 *"
b11100100000000001 )"
b0 ("
0'"
b0 &"
b0 %"
0$"
b1 #"
b1 ""
b1 !"
b1 ~
b1 }
b1 |
b1 {
0z
b1 y
b1 x
b1 w
0v
b1 u
b1 t
b11111 s
1r
b11100100000000001 q
b11100100000000010 p
b11100100000000011 o
b11100100000000100 n
b11100100000000101 m
b1100100000000001 l
b0 k
b0 j
b0 i
0h
b1 g
b11100100000000001 f
b0 e
0d
b0 c
b0 b
0a
b1 `
b1 _
b1 ^
b1 ]
b1 \
b1 [
b1 Z
0Y
b1 X
b1 W
b1 V
0U
b1 T
b1 S
b11111 R
1Q
b11100100000000001 P
b11100100000000010 O
b11100100000000011 N
b11100100000000100 M
b11100100000000101 L
b1100100000000001 K
b0 J
b0 I
b0 H
0G
b1 F
b11100100000000001 E
b0 D
0C
b0 B
b0 A
0@
b1100100000000001 ?
b1100100000000001 >
b1100100000000001 =
b11111 <
b1 ;
b1100100000000001 :
b10 9
b1100100000000001 8
b1100100000000010 7
b11111 6
b1100100000000100 5
b11111 4
b1100100000000001 3
b1100100000000101 2
b1100100000000011 1
b1100100000000010 0
b11111 /
b1100100000000100 .
1-
b11111 ,
b1100100000000001 +
b1100100000000101 *
b1100100000000011 )
0(
b1100100000000001 '
b1100100000000001 &
b1100100000000001 %
b1 $
b1100100000000001 #
b10 "
b1100100000000001 !
$end
#10
0$"
b0 %"
b0 ("
b1 *"
b1 D"
b0 ,"
b1 A"
b1 C"
b1 :"
b1 @"
b0 ."
b1 8"
b0 &"
b11110 x"
b1 ^#
b1 B$
b1 =#
b1 c$
1~#
b1 !$
b1 $
b1 ;
1p#
b10 "
b10 9
1f"
0i"
b10 n#
0m"
b1 g"
b1 j"
b1 "#
b1 ##
b0 o"
0{"
b1 ~"
b1 &#
b1 }"
b1 y"
b10 l"
b10 (#
b1 n"
b10 %#
b10 '#
b0 3#
b0 I#
b0 T#
b0 j#
b0 8$
b0 N$
b0 Y$
b0 o$
b10 |"
b10 $#
b1 p"
0/#
0P#
04$
0U$
b10 z"
b1 h"
05#
0@#
0V#
0a#
0w#
0$$
0:$
0E$
0[$
0f$
b10 u#
b10 -$
b100000001111 %
b100000001111 =
b100000001111 !
b100000001111 8
b100000001111 '
b100000001111 ?
b100000001111 #
b100000001111 :
b100000001111 &
b100000001111 >
0A#
0b#
0%$
0F$
0g$
b1 t#
b1 #$
b1 ($
b1 ,$
1q#
b100000001111 /"
b10000100000001111 q"
b100000001111 K
b100000001111 P"
b100000001111 l
b10000100000001111 )"
b10000100000001111 k"
b10000100000001111 E
b10000100000001111 J"
b10000100000001111 f
b10 B#
b10 c#
b10 &$
b10 G$
b10 h$
0l#
b11101 <
b11101 +#
b11101 >#
b11101 L#
b11101 _#
b11101 m#
b11101 "$
b11101 0$
b11101 C$
b11101 Q$
b11101 d$
0w"
b10000100000001111 4"
b10000100000001111 }#
b10000100000001111 v"
b10000100000001111 |#
b10000100000001111 P
b10000100000001111 {#
b10000100000001111 U"
b10000100000001111 z#
b10000100000001111 q
b10000100000001111 y#
b100000001111 +
b100000001111 3
b100000001111 k#
0-
1(
#20
0(
#30
b0 $
b0 ;
0p#
b0 "
b0 9
0i"
0f"
0m"
b0 n#
b1 o"
1{"
b0 g"
b0 j"
b1 l"
b1 (#
b0 n"
b1 %#
b1 '#
b1 |"
b1 $#
b0 p"
b0 z"
b0 h"
b0 u#
b0 -$
b1100100000001110 %
b1100100000001110 =
b1100100000000010 !
b1100100000000010 8
b1100100000001110 '
b1100100000001110 ?
b1100100000001110 #
b1100100000001110 :
b1100100000001110 &
b1100100000001110 >
0q#
b1100100000001110 /"
b1100100000000010 q"
b1100100000001110 K
b1100100000001110 P"
b1100100000001110 l
b11100100000001110 )"
b11100100000000010 k"
b11100100000001110 E
b11100100000001110 J"
b11100100000001110 f
1l#
b11100100000001110 4"
b11100100000001110 }#
b11100100000001110 v"
b11100100000001110 |#
b11100100000001110 P
b11100100000001110 {#
b11100100000001110 U"
b11100100000001110 z#
b11100100000001110 q
b11100100000001110 y#
b1100100000001110 +
b1100100000001110 3
b1100100000001110 k#
1(
#40
0(
#50
0~#
b10 "
b10 9
1T$
b10 $
b10 ;
0O#
1f"
b10 R$
b1100100000000010 !
b1100100000000010 8
b11100100000000010 q"
b0 M#
b11100100000000010 k"
b10 g"
b10 j"
0i"
b11 l"
b11 (#
b11 %#
b11 '#
b11 "#
b11 ##
b10010 n"
b11 |"
b11 $#
b11 ~"
b11 &#
b10110 p"
b10 z"
b11 }"
b11 y"
b11111 h"
b10 3#
b10 I#
b10 T#
b10 j#
b10 u#
b10 -$
b10 8$
b10 N$
b10 Y$
b10 o$
1/#
1P#
1q#
14$
1U$
15#
1@#
1V#
1a#
1w#
1$$
1:$
1E$
1[$
1f$
1A#
1b#
1%$
1F$
1g$
b11 B#
b11 c#
b11 &$
b11 G$
b11 h$
b11111 <
b11111 +#
b11111 >#
b11111 L#
b11111 _#
b11111 m#
b11111 "$
b11111 0$
b11111 C$
b11111 Q$
b11111 d$
1w"
1(
#60
0(
#70
1b$
b11100 x"
b10 "
b10 9
b10 $
b10 ;
1T$
1f"
0i"
b10 R$
0m"
b10 g"
b10 j"
b1 "#
b1 ##
b1 o"
1{"
b1 ~"
b1 &#
b0 z"
b1 }"
b10 l"
b10 (#
b10 n"
b10 %#
b10 '#
b0 3#
b0 I#
b0 T#
b0 j#
b0 u#
b0 -$
b0 8$
b0 N$
b10 |"
b10 $#
b10 p"
0/#
0P#
0q#
04$
b10 y"
b10 h"
05#
0@#
0V#
0a#
0w#
0$$
0:$
0E$
0[$
0f$
b10 Y$
b10 o$
b100000001100 !
b100000001100 8
0A#
0b#
0%$
0F$
0g$
1U$
b10000100000001100 q"
b10000100000001100 k"
b10 B#
b10 c#
b10 &$
b10 G$
b10 h$
0P$
b11101 <
b11101 +#
b11101 >#
b11101 L#
b11101 _#
b11101 m#
b11101 "$
b11101 0$
b11101 C$
b11101 Q$
b11101 d$
0w"
b10000100000001100 3"
b10000100000001100 a$
b10000100000001100 u"
b10000100000001100 `$
b10000100000001100 O
b10000100000001100 _$
b10000100000001100 T"
b10000100000001100 ^$
b10000100000001100 p
b10000100000001100 ]$
b100000001100 0
b100000001100 7
b100000001100 O$
1(
#80
0(
#90
1(
#100
0(
#110
1(
